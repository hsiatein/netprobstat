#align(center)[
  #text(size: 32pt)[网络数据的概率与统计方法]
  #v(0cm)
  #text(size: 32pt)[Homework 1]
  #v(2cm)
  #text(size: 18pt)[夏添]
]

#pagebreak()

= 2.1

== 2.1.a

$2 arrow.r 4 arrow.r 5 arrow.r 4 arrow.r 7$

== 2.1.b

$2 arrow.r 4 arrow.r 6 arrow.r 5 arrow.r 4 arrow.r 7$

== 2.1.c

$2 arrow.r 4 arrow.r 7$

== 2.1.d

14条path, 计算方法可见2.1.d.jl程序

[1, 2, 4, 7],
[1, 2, 4, 6, 7],
[1, 3, 2, 4, 7],
[1, 3, 5, 4, 7],
[1, 3, 5, 6, 7],
[1, 2, 3, 5, 4, 7],
[1, 2, 3, 5, 6, 7],
[1, 2, 4, 5, 6, 7],
[1, 3, 2, 4, 6, 7],
[1, 3, 5, 4, 6, 7],
[1, 3, 5, 6, 4, 7],
[1, 2, 3, 5, 4, 6, 7],
[1, 2, 3, 5, 6, 4, 7],
[1, 3, 2, 4, 5, 6, 7]

测地线为[1, 2, 4, 7], 为唯一的最短路

== 2.1.e

出去空图和自身，总共$2^7-2=126$个子图，遍历这些图来检测是否连通或有环。使用Julia的Graphs包来计算，详见2.1.e.jl程序。

连通子图数量: 72

含有长度大于等于3的环的子图数量: 38

含有长度为4的环的子图数量: 7

#v(2cm)

= 2.2

使用Julia的Graphs包来实现，Julia是数学友好的通用编程语言，Graphs包是官方推荐的图包，2.2.jl程序是使用其计算每两个点间最短路径的示例。

#v(2cm)

= 2.3

= 2.3.a