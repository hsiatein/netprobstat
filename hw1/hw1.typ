#align(center)[
  #text(size: 32pt)[网络数据的概率与统计方法]
  #v(0cm)
  #text(size: 32pt)[Homework 1]
  #v(2cm)
  #text(size: 18pt)[夏添]
]

#pagebreak()

= 2.1

== 2.1.a

$2 arrow.r 4 arrow.r 5 arrow.r 4 arrow.r 7$

== 2.1.b

$2 arrow.r 4 arrow.r 6 arrow.r 5 arrow.r 4 arrow.r 7$

== 2.1.c

$2 arrow.r 4 arrow.r 7$

== 2.1.d

14条path, 计算方法可见2.1.d.jl程序

[1, 2, 4, 7],
[1, 2, 4, 6, 7],
[1, 3, 2, 4, 7],
[1, 3, 5, 4, 7],
[1, 3, 5, 6, 7],
[1, 2, 3, 5, 4, 7],
[1, 2, 3, 5, 6, 7],
[1, 2, 4, 5, 6, 7],
[1, 3, 2, 4, 6, 7],
[1, 3, 5, 4, 6, 7],
[1, 3, 5, 6, 4, 7],
[1, 2, 3, 5, 4, 6, 7],
[1, 2, 3, 5, 6, 4, 7],
[1, 3, 2, 4, 5, 6, 7]

测地线为[1, 2, 4, 7], 为唯一的最短路

== 2.1.e

出去空图和自身, 共$2^7-2=126$个子图, 历这些图来检测是否连通或有环.使用Julia的Graphs包来计算, 见2.1.e.jl程序.

连通子图数量: 72

含有长度大于等于3的环的子图数量: 38

含有长度为4的环的子图数量: 7

#v(2cm)

= 2.2

使用Julia的Graphs包来实现, ulia是数学友好的通用编程语言, raphs包是官方推荐的图包, .2.jl程序是使用其计算每两个点间最短路径的示例.

#v(2cm)

= 2.3

== 2.3.a

使用Julia的LinearAlgebra包来计算, 值验证的代码见2.3.a.jl程序.

L特征值 = [-1.84951145962554e-16, 0.8143492057686633, 2.328009014103823, 3.3139076014894115, 3.5980893488274437, 4.457529630368829, 5.488115199441825]

L_normalized特征值 = [-7.513521055324546e-17, 0.3245847383727133, 0.8984443816389692, 1.1547282022414804, 1.3965736219147333, 1.5184322609218541, 1.70723679491025]

第一个特征值均为0, 浮点误差

== 2.3.b

使用Julia的LinearAlgebra包来计算, 值验证的代码见2.3.b.jl程序.第二小的特征值对应特征向量为[-0.5600988036709549, -0.3161832627190568, -0.34789832870143056, 0.21693093308782505, 0.11589780795197868, 0.38427953161352074, 0.5070721224381334], 据符号, 以分成两组: [1,2,3]和[4,5,6,7].

== 2.3.c

前一题特征值0.8143492057686732

特征向量[-0.5600988036709549, -0.3161832627190568, -0.34789832870143056, 0.21693093308782505, 0.11589780795197868, 0.38427953161352074, 0.5070721224381334]

在1和7间加一条边, 见2.3.c.jl程序, 特征值1.5857864376269077, 增加了

特征向量[-0.42357699884528544, -0.4235769988452842, -0.4235769988452853, 0.24812566121427737, 0.24812566121427615, 0.5263540128930321, 0.24812566121427612]

#pagebreak()


